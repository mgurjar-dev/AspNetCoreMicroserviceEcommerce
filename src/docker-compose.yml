version: '3.4'

services:
  catelogdb:
    image: mongo:4
  #basketdb:
  #  image: redis:alpine

  #discountdb:
  #  image: postgres

  #orderdb:
  #  image: mcr.microsoft.com/mssql/server:2017-latest

  #pgadmin:
  #  image: dpage/pgadmin4
    
  #rabbitmq:
  #  image: rabbitmq:3-management-alpine
  portainer:
    image: portainer/portainer-ce

  catelog.api:
    image: ${DOCKER_REGISTRY-}catelogapi
    build:
      context: .
      dockerfile: Services/Catelog/Catelog.API/Dockerfile

  #basket.api:
  #  image: ${DOCKER_REGISTRY-}basketapi
  #  build:
  #    context: .
  #    dockerfile: Services/Basket/Basket.API/Dockerfile
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2

  #discount.api:
  #  image: ${DOCKER_REGISTRY-}discountapi
  #  build:
  #    context: .
  #    dockerfile: Services/Discount/Discount.API/Dockerfile

  #discount.grpc:
  #  image: ${DOCKER_REGISTRY-}discountgrpc
  #  build:
  #    context: .
  #    dockerfile: Services/Discount/Discount.Grpc/Dockerfile

  #ordering.api:
  #  image: ${DOCKER_REGISTRY-}orderingapi
  #  build:
  #    context: .
  #    dockerfile: Services/Ordering/Ordering.API/Dockerfile

  zipkin:
    image: openzipkin/zipkin

  ocelotapigw:
    image: ${DOCKER_REGISTRY-}ocelotapigw
    build:
      context: .
      dockerfile: ApiGateways/OcelotApiGw/Dockerfile

  #shopping.aggregator:
  #  image: ${DOCKER_REGISTRY-}shoppingaggregator
  #  build:
  #    context: .
  #    dockerfile: ApiGateways/Shopping.Aggregator/Shopping.Aggregator/Dockerfile

  aspnetrunbasics:
    image: ${DOCKER_REGISTRY-}aspnetrunbasics
    build:
      context: .
      dockerfile: WebApps/AspnetRunBasics/Dockerfile

  webstatus:
    image: ${DOCKER_REGISTRY-}webstatus
    build:
      context: .
      dockerfile: WebApps/WebStatus/WebStatus/Dockerfile

volumes:
  mongo_data:
  portainer_data:
  #postgres_data:
  #pgadmin_data:
  elasticsearch-data:







